import React, { useState } from 'react';

interface ScenarioSelectorProps {
  onSelect: (scenario: string) => void;
}

export default function ScenarioSelector({ onSelect }: ScenarioSelectorProps) {
  const [selected, setSelected] = useState('balanced');
  
  const scenarios = [
    {
      id: 'vehicles',
      name: '–ú–∏–Ω–∏–º—É–º –º–∞—à–∏–Ω',
      icon: 'üöö',
      description: '–ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
      details: '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —É–ø–∞–∫–æ–≤–∫–∏ –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –ª–æ–≥–∏—Å—Ç–∏–∫—É'
    },
    {
      id: 'safety',
      name: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      icon: 'üõ°Ô∏è',
      description: '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞',
      details: '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Å–∞ –∏ –Ω–∏–∑–∫–∏–π —Ü–µ–Ω—Ç—Ä —Ç—è–∂–µ—Å—Ç–∏'
    },
    {
      id: 'fragile',
      name: '–ó–∞—â–∏—Ç–∞ —Ö—Ä—É–ø–∫–∏—Ö',
      icon: 'üíé',
      description: '–ó–∞—â–∏—Ç–∞ –æ—Ü–∏–Ω–∫–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–æ–≤',
      details: '–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ö—Ä—É–ø–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≤–µ—Ä—Ö–Ω–∏—Ö —Å–ª–æ—è—Ö —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞—â–∏—Ç–æ–π'
    },
    {
      id: 'unloading',
      name: '–ë—ã—Å—Ç—Ä–∞—è —Ä–∞–∑–≥—Ä—É–∑–∫–∞',
      icon: '‚ö°',
      description: '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Ä–∞–∑–≥—Ä—É–∑–∫–∏',
      details: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–µ–≤ –∏ —É–¥–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º'
    },
    {
      id: 'balanced',
      name: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π',
      icon: '‚öñÔ∏è',
      description: '–ë–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤',
      details: '–ö–æ–º–ø—Ä–æ–º–∏—Å—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∑–∞–¥–∞—á'
    }
  ];
  
  const handleSelect = (scenarioId: string) => {
    setSelected(scenarioId);
    onSelect(scenarioId);
  };
  
  return (
    <div className="space-y-6">
      <div className="text-center">
        <h3 className="text-xl font-bold text-white mb-2">
          üéØ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —É–ø–∞–∫–æ–≤–∫–∏
        </h3>
        <p className="text-white/70 text-sm">
          –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–µ—Ä–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —É–ø–∞–∫–æ–≤–∫–∏
        </p>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {scenarios.map(scenario => (
          <button
            key={scenario.id}
            onClick={() => handleSelect(scenario.id)}
            className={`
              group relative p-4 rounded-xl border-2 transition-all duration-300 transform hover:scale-105
              ${selected === scenario.id
                ? 'border-blue-400 bg-blue-500/20 shadow-lg shadow-blue-500/20'
                : 'border-white/20 hover:border-white/40 bg-white/5 hover:bg-white/10'
              }
            `}
          >
            <div className="flex flex-col items-center text-center space-y-3">
              <div className="text-4xl mb-1 group-hover:scale-110 transition-transform duration-300">
                {scenario.icon}
              </div>
              
              <div>
                <div className="font-semibold text-white text-lg">
                  {scenario.name}
                </div>
                <div className="text-sm text-white/70 mt-1">
                  {scenario.description}
                </div>
                <div className="text-xs text-white/50 mt-2 leading-relaxed">
                  {scenario.details}
                </div>
              </div>
              
              {selected === scenario.id && (
                <div className="absolute top-2 right-2">
                  <div className="w-3 h-3 bg-blue-400 rounded-full"></div>
                </div>
              )}
            </div>
          </button>
        ))}
      </div>
      
      {selected && (
        <div className="mt-6 p-4 bg-gradient-to-r from-blue-500/10 to-purple-500/10 rounded-lg border border-blue-500/30">
          <div className="flex items-center space-x-3">
            <div className="text-2xl">
              {scenarios.find(s => s.id === selected)?.icon}
            </div>
            <div>
              <div className="text-sm font-semibold text-white">
                –í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: {scenarios.find(s => s.id === selected)?.name}
              </div>
              <div className="text-xs text-white/70">
                {scenarios.find(s => s.id === selected)?.details}
              </div>
            </div>
          </div>
        </div>
      )}
      
      <div className="mt-6 p-4 bg-yellow-500/10 rounded-lg border border-yellow-500/30">
        <div className="flex items-start space-x-3">
          <div className="text-xl">üí°</div>
          <div className="text-sm text-white/80">
            <div className="font-semibold mb-1">–£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞</div>
            <div className="text-xs text-white/60 leading-relaxed">
              –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –∏ –≤—ã–±–µ—Ä–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π, 
              —É—á–∏—Ç—ã–≤–∞—è –≤–∞—à–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã, —Ç–∏–ø—ã –≤–æ–∑–¥—É—Ö–æ–≤–æ–¥–æ–≤ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞
export function ScenarioResults({ scenarioData }: { scenarioData: any }) {
  if (!scenarioData) return null;
  
  const { name, description, metrics, warnings, recommendations, allScenarios } = scenarioData;
  
  return (
    <div className="space-y-4 mt-6">
      <div className="bg-green-500/10 border border-green-500/30 rounded-lg p-4">
        <div className="flex items-center space-x-3 mb-3">
          <div className="text-2xl">üéØ</div>
          <div>
            <div className="font-semibold text-white">–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π: {name}</div>
            <div className="text-sm text-white/70">{description}</div>
          </div>
        </div>
        
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
          <div className="bg-white/5 rounded-lg p-3">
            <div className="text-lg font-bold text-blue-400">{metrics.vehiclesUsed}</div>
            <div className="text-xs text-white/70">–ú–∞—à–∏–Ω</div>
          </div>
          <div className="bg-white/5 rounded-lg p-3">
            <div className="text-lg font-bold text-green-400">{metrics.stabilityScore.toFixed(0)}/100</div>
            <div className="text-xs text-white/70">–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å</div>
          </div>
          <div className="bg-white/5 rounded-lg p-3">
            <div className="text-lg font-bold text-purple-400">{metrics.avgUtilization.toFixed(0)}%</div>
            <div className="text-xs text-white/70">–ó–∞–≥—Ä—É–∑–∫–∞</div>
          </div>
          <div className="bg-white/5 rounded-lg p-3">
            <div className="text-lg font-bold text-orange-400">{metrics.fragileProtectionScore.toFixed(0)}/100</div>
            <div className="text-xs text-white/70">–ó–∞—â–∏—Ç–∞ —Ö—Ä—É–ø–∫–∏—Ö</div>
          </div>
        </div>
      </div>
      
      {warnings.length > 0 && (
        <div className="bg-yellow-500/10 border border-yellow-500/30 rounded-lg p-4">
          <div className="font-semibold text-yellow-400 mb-2">‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</div>
          <ul className="space-y-1 text-sm text-white/80">
            {warnings.map((warning: string, index: number) => (
              <li key={index}>‚Ä¢ {warning}</li>
            ))}
          </ul>
        </div>
      )}
      
      {recommendations.length > 0 && (
        <div className="bg-blue-500/10 border border-blue-500/30 rounded-lg p-4">
          <div className="font-semibold text-blue-400 mb-2">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</div>
          <ul className="space-y-1 text-sm text-white/80">
            {recommendations.map((rec: string, index: number) => (
              <li key={index}>‚Ä¢ {rec}</li>
            ))}
          </ul>
        </div>
      )}
      
      {allScenarios && allScenarios.length > 1 && (
        <div className="bg-white/5 border border-white/20 rounded-lg p-4">
          <div className="font-semibold text-white mb-3">üìä –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏</div>
          <div className="space-y-2">
            {allScenarios.slice(1).map((scenario: any, index: number) => (
              <div key={index} className="flex justify-between items-center text-sm bg-white/5 rounded p-2">
                <span className="text-white/80">{scenario.name}</span>
                <div className="flex space-x-4 text-xs text-white/60">
                  <span>–ú–∞—à–∏–Ω: {scenario.vehiclesUsed}</span>
                  <span>–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å: {scenario.stabilityScore.toFixed(0)}</span>
                  <span>–ó–∞–≥—Ä—É–∑–∫–∞: {scenario.utilization.toFixed(0)}%</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}
